################################################################################
# PART 1
################################################################################

No Class

=
Introduction + Terminal
* Basics of computers (CPU, memory, disks)
* Main memory vs hard disk
* What is programming?
* Terminal basics
* Course overview
<a href="https://docs.google.com/presentation/d/1FThMMp0DG3NATEpaa5R0Hsj3UXhKRIQvf0OhIka7HrI/edit?usp=sharing">Link to Slides</a><br>
<a href="materials3/lec-01-commands.pdf">Terminal basics</a>

=
How computers work?
* Shell commands (pwd, ls, cd, etc.)
* Absolute vs relative path
* Pseudocode
* State
* Flow of execution
<a href="materials3/lec-02-commands.pdf">Shell Commands</a><br>
<a href="materials/lec-03-worksheet.pdf">Link to Worksheet</a><br>
<b>Due (Wed)</b>: Project 0 (ungraded) 

=
Basics of Programming
* Interpreter, editor, and IDE
* Running python
* Arithmetic operators
* Logical operators
* Values and types
* Boolean logic
* Interactive vs. script mode
<a href="materials3/lec-03-commands.txt">Operators</a><br>
<a href="materials3/lec-03-notes.pdf">Link to Notes</a><br>
<b>Read</b>: <a href="http://greenteapress.com/thinkpython2/thinkpython2.pdf">Think Python</a> (Chapter 1)

=
Variables
* Operator precedence
* Assignment operator
* Variables
* Naming variables
* Bugs (errors)
<a href="materials3/lec-04-notes.pdf">Link to Notes</a><br>
<b>Read</b>: Think Python (Chapter 2)<br>
<b>Homework</b> (not graded): <a href="https://docs.google.com/document/d/1fcLbx5lrJ5SbHQv5HWrrkfme9K_c1QxE1H-PvUj2j-Q/edit?usp=sharing">Homework 1</a><br>
<b>Expressions</b> (for practice): <a href="materials3/expressions.py" download>expressions.py</a><br>
<b>Due (Wed)</b>: Project 1

=
Functions
* Why functions?
* In-built functions (e.g., input())
* Math functions (e.g., factorial())
* Writing your own functions
* Parameters and arguments
* Return values
<a href="https://docs.google.com/document/d/1iVC8R9wvszax6axQbBOoJUMYK3_K4tDxXf_5XhbhUmw/edit?usp=sharing">Notes on Functions</a><br>
<a href="materials3/lec-05-notes.pdf">Link to Notes</a><br>
<b>Code Snippets</b>: <a href="materials3/code/functions/quadratic_roots.py">quadratic_roots.py</a>, 
<a href="materials3/code/functions/quadratic_roots_input.py">quadratic_roots_input.py</a>, 
<a href="materials3/code/functions/inbuilt_functions.py">inbuilt_functions.py</a>, 
<a href="materials3/code/functions/math_functions.py">math_functions.py</a>, 
<a href="materials3/code/functions/write_functions.py">write_functions.py</a><br>
<b>Read</b>: Think Python (Chapter 3)<br>
<b>Read</b>: <a href="materials/lec-08-extra.pdf">Creating Fruitful Functions</a>

=
More Functions
* Control flow during a function call
* Scope of variables in a function
* Stack diagrams(Frames)
<a href="materials3/lec-06-slides.pdf">Link to Slides</a><br>
<a href="materials3/lec-06-notes.pdf">Link to Notes</a><br>
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-06-functions">More Functions</a><br> 
<b>Read</b>: Think Python (Chapter 3.6 - 3.12)<br>
<b>Due (Wed)</b>: Project 2

=
Conditionals and Iteration
* Simple conditionals
* Chained conditionals
* Nested conditionals
* Loops
* While loop
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-07-conditionals-loops">Conditionals & Loops</a><br> 
<a href="materials3/lec-07-notes.pdf">Link to Notes</a><br>
<a href="materials3/lec-07-slides.pdf">Link to Slides</a><br>
<b>Read</b>: Think Python (Chapters 5.1 - 5.7, 6.1 - 6.4, and 7)<br>

=
Advanced Conditionals and Loops
* Multiple elifs
* Nested if-else
* More on while loop
* break statement
* continue statement
* Nested loops
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-08-loops">Advanced conditionals + Loops</a><br> 
<a href="materials3/lec-08-notes.pdf">Link to Notes</a><br>
<b>Read</b>: Think Python (Chapters 5.1 - 5.7, 6.1 - 6.4, and 7)<br>
<b>Due (Wed)</b>: Project 3

=
Strings
* String basics
* Indexing
* len() function
* for loop
* String methods
* Searching
* Slicing
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-09-strings">Strings</a><br> 
<a href="materials3/lec-09-notes.pdf">Link to Notes</a><br>
<b>MIDTERM EXAM 1</b><br>
<b>Read</b>: Think Python (Chapter 8)<br>

################################################################################
# PART 2
################################################################################

=
Lists
* Strings Review
* Sequences
* Indexing and Slicing
* Mutable vs Immutable
<b>Read</b>: Think Python (Chapter 10)<br>
<a href="materials3/lec-10-notes.pdf">Link to Notes</a><br>
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-10-lists">Lists</a><br> 
<b>Due (Wed)</b>: Project 4

=
Lists and CSV Files
* List methods
* Split and Join
* CSV files
<b>Lecture Notes: </b><a href="materials3/lec-11-notes.pdf">Lists and CSVs</a><br>
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-11-csvs">Lists+CSVs</a><br> 
<b>Read</b>: Think Python (Chapter 10) and <a href="http://automatetheboringstuff.com/chapter14/">AutomateTheBoringStuff</a> (Chapter 14 - upto but not including Writer Objects)<br>

=
Dictionaries
* Syntax
* Key-Value pairs
* Lookup
* Insert
* When is a dictionary useful?
<b>Lecture Notes: </b><a href="materials3/lec-12-notes.pdf">Dictionaries</a><br>
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-12-dicts">Dictionaries</a><br> 
<b>Read</b>: Think Python (Chapter 11.1 - 11.3) <br>
<b>Due (Wed)</b>: Project 5

=
Advanced Dictionaries
* Delete a Key-Value pair
* Nesting
* dicts with lists
* Dealing with JSON
<b>Lecture Notes: </b><a href="materials3/lec-13-notes.pdf">Advanced Dictionaries</a><br>
<b>Lecture Slides: </b><a href="materials3/lec-13-dicts.pdf">Table representation</a><br>
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-13-more-dicts">Advanced Dictionaries</a><br> 
<b>Read</b>: Think Python (Chapter 11.5 and 11.7) and <a href="http://automatetheboringstuff.com/chapter14/">AutomateTheBoringStuff</a> (from "JSON and APIs" until "Writing JSON with the dumps() Function" (included))<br>

=
JSON, Tuples, and Objects
* Binning
* Deserialization
* Serialization
* Pretty Printing
* Tuples
* Intro to References
<b>Lecture Notes: </b><a href="materials3/lec-14-notes.pdf">JSON & Tuples</a><br>
<b>Lecture Slides: </b><a href="materials3/lec-14-json.pdf">JSON</a> and <a href="materials3/lec-14-tuples.pdf">Tuples</a><br>
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-14-json-tuples">JSON & Tuples</a><br> 
<b>Read</b>: Think Python Chapter 10 ("Objects and Values" and "Aliasing") and Ch 12<br>
<b>Due (Wed)</b>: Project 6

=
Objects, References, and Copying
* Objects 
* References
* Shallow Copy
* Deep Copy
<b>Read</b>: <a href="https://automatetheboringstuff.com/chapter4/">AutomateTheBoringStuff Chapter 4</a> ("References" through the end)<br>
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-15-objects">Objects, References, Copying</a><br> 
<b>Lecture Notes: </b><a href="materials3/lec-15-notes.pdf">Objects, References, Copying</a><br>

=
Recursion
* Base/Resursive Cases
* Lists of Lists
* More Stack Diagrams
* Stack Overflow
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-16-recursion">Recursion</a><br>
<b>Lecture Notes: </b><a href="materials3/lec-16-notes.pdf">Recursion</a><br>
<b>Read</b>: ThinkPython Ch 5 ("Recursion" through "Infinite Recursion"), Ch 6 ("More Recursion" through end)<br>
<font color="red"><b>Due (Wed)</b>: Project 7</font>

=
Advanced functions
* Iterators and generators
* References to functions
<b>Read</b>: <a href="materials/lec-23.pdf">Advanced Functions</a><br>
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-17-afuncs">Adv funcs</a><br>

=
Exceptions and Files
* Handling exceptions
* Reading and writing files
<b>Read</b>: <a href="https://automatetheboringstuff.com/chapter10/">AutomateTheBoringStuff Ch 10</a> (beginning through "Assertions") and ThinkPython Ch 14<br>
<b>Lecture Slides: </b><a href="materials/lec-24.pdf">Exceptions</a> and <a href="materials/lec-25.pdf">Files</a><br>
<b>Code Snippets</b>: <a href="https://github.com/tylerharter/caraza-harter-com/tree/master/tyler/cs301/fall18/materials3/code/lec-18-exceptions">Exceptions and Files</a><br>

=
Pandas
* iPython
* dataframe
* series
* reading CSVs
* element-wise operations
<b>Reading</b>: <a href="materials/readings/lec-26/pandas-intro.html">CS 301 Notes</a>
(<a href="https://github.com/tylerharter/caraza-harter-com/blob/master/tyler/cs301/fall18/materials/readings/lec-26/pandas-intro.ipynb">Notebook</a>)<br>

<font color="red"><b>MIDTERM EXAM 2</b></font>


################################################################################
# PART 3
################################################################################

=
Web 1
<b>Due (Wed)</b>: Project 8

=
Web 2

=
Databases 1
<b>Due (Wed)</b>: Project 9

=
Databases 2
More python for web

=
Plotting 1

=
Plotting 2

=
TBD

=
TBD

=
Review
<b>Due (Wed)</b>: Project 10 (Final Project)
